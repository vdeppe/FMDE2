package FMDE.runtime;

/*Generated by MPS */

import java.util.Map;
import java.util.HashMap;

public class TotalFunction {
  private FinSet source;
  private FinSet target;
  public Map<Object, Object> elementMappings;

  public TotalFunction() {
  }

  public TotalFunction(FinSet pSource, FinSet pTarget) {
    this.source = pSource;
    this.target = pTarget;
    this.elementMappings = new HashMap<Object, Object>();
  }

  public Object map(Object e) {
    return this.elementMappings.get(e);
  }

  public FinSet getSource() {
    return source;
  }

  public boolean isTheSameAs(TotalFunction f) {
    boolean value = false;
    for (Object x : getSource().getElements()) {
      if (map(x) == null) {
        throw new IllegalArgumentException("Detected a null value mapping");
      }
      value = map(x).equals(f.map(x));
    }
    return value;
  }


  public FinSet getTarget() {
    return target;
  }

  public TotalFunction addMapping(Object from, Object to) {
    this.elementMappings.put(from, to);
    return this;
  }

  @Override
  public boolean equals(Object p0) {
    TotalFunction tf = (TotalFunction) p0;
    if (!(this.source.equals(tf.source))) {
      return false;
    }
    if (!(this.target.equals(tf.target))) {
      return false;

    }

    for (Object key : elementMappings.keySet()) {
      if (!(tf.map(key).equals(map(key)))) {
        return false;
      }
    }
    return true;
  }
}
