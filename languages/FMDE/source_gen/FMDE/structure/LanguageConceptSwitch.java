package FMDE.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Composition = 0;
  public static final int Edge = 1;
  public static final int EdgeName = 2;
  public static final int FinSet = 3;
  public static final int FinSetElements = 4;
  public static final int FinSetRendering = 5;
  public static final int Graph = 6;
  public static final int GraphSet = 7;
  public static final int Mapping = 8;
  public static final int Node = 9;
  public static final int Project = 10;
  public static final int SourceNode = 11;
  public static final int TargetNode = 12;
  public static final int TotalFunction = 13;
  public static final int TotalFunctionRendering = 14;
  public static final int fmdeLanguage = 15;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x41ba7664a5f64ebaL, 0xb5f52e676d679bacL);
    builder.put(0x7de6eec37a85fedaL, Composition);
    builder.put(0x5b0ece544220fd40L, Edge);
    builder.put(0x5b0ece54424736daL, EdgeName);
    builder.put(0x58075003b8db538aL, FinSet);
    builder.put(0x40c47a43bd1d01b3L, FinSetElements);
    builder.put(0x6be9763e36a5faaL, FinSetRendering);
    builder.put(0x5b0ece544232e6f1L, Graph);
    builder.put(0x5b0ece544220fd25L, GraphSet);
    builder.put(0x58075003b8dc484bL, Mapping);
    builder.put(0x5b0ece544220fd63L, Node);
    builder.put(0x6be9763e36afbd2L, Project);
    builder.put(0x5b0ece544232e8eeL, SourceNode);
    builder.put(0x5b0ece544232e8f1L, TargetNode);
    builder.put(0x58075003b8dc4831L, TotalFunction);
    builder.put(0x5baf3deb65d4da17L, TotalFunctionRendering);
    builder.put(0x7f1fce1641f2d776L, fmdeLanguage);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
